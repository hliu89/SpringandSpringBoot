<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xmlns:p="http://www.springframework.org/schema/p"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xmlns:tx="http://www.springframework.org/schema/tx"
  xmlns:context="http://www.springframework.org/schema/context"
xsi:schemaLocation="http://www.springframework.org/schema/beans 
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/aop     
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd   
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
        http://www.springframework.org/schema/context     
        http://www.springframework.org/schema/context/spring-context-3.0.xsd">
        

<!-- 配置被代理对象-->
<bean id="test1service" class="aop.Test1service">
 <property name="name" value="liu"/>
</bean>
<!-- 配置前置通知  -->
<bean id="myMethodBeforeAdvice" class="aop.MyMethodBeforeAdvice"/>
<bean id="myAfterReturningAdvice" class="aop.MyAfterReturningAdvice"/>
<!-- 配置代理对象 -->
<bean id="proxyFactoryBean" class="org.springframework.aop.framework.ProxyFactoryBean">
<!-- 配置代理接口集 -->
 <property name="proxyInterfaces">
  <list>
   <value>aop.TestserviceInter</value>
   <value>aop.TestserviceInter2</value>
  </list>
 </property>
 <!-- 把通知织入到代理对象 -->
 <property name="interceptorNames">
 <list>
  <value>myMethodBeforeAdvice</value>
  <value>myAfterReturningAdvice</value>
  </list>
 </property>
 <!-- 把被代理对象配置进来 -->
 <property name="target" ref="test1service"/>
</bean>
 </beans>
 
 
 